{
  "ERR": {
    "prefix": "ERR",
    "body": [
      "use serde::Serialize;"
      ""
      "pub type Result<T> = core::result::Result<T, Error>;"
      ""
      "#[derive(Debug, Serialize)]"
      "pub enum Error {"
        "$0"
      "}"
      ""
      "impl std::fmt::Display for Error {"
        "fn fmt("
          "&self,"
          "fmt: &mut core::fmt::Formatter"
        ") -> core::result::Result<(), core::fmt::Error> {"
          "write!(fmt, \"{self:?}\")"
        "}"
      "}"
      ""
      "impl std::error::Error for Error {}"
    ]
  },

  "ERR_MODULE": {
    "prefix": "ERR_MODULE",
    "body": [
      "mod error;"
      ""
      "pub use self::error::{Error, Result};"
      ""
      "$0"
    ]
  }
}
